buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:${contractVerifierVersion}"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:${asciiDoctorVersion}"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${bintrayVersion}"
    }
}

apply plugin: "org.springframework.boot"
apply plugin: "org.asciidoctor.convert"
apply plugin: "spring-cloud-contract"
apply plugin: "com.jfrog.bintray"
apply plugin: "maven-publish"

task stubsJar(type: Jar) {
    archiveClassifier = "stubs"
    into("META-INF/${project.group}/${project.name}/${project.version}/mappings") {
        include('**/*.*')
        from("${project.buildDir}/generated-snippets/stubs")
    }
    into("META-INF/${project.group}/${project.name}/${project.version}/contracts") {
        include('**/*.groovy')
        from("${project.buildDir}/generated-snippets/contracts")
    }
}

stubsJar.dependsOn(test)

artifacts {
    archives stubsJar
}

publishing {
    publications {
        stubs(MavenPublication) {
            artifact stubsJar
            artifactId project.name
        }
    }
}

bintray {
    user = 'ronin'
    key = ''
    publications = ['stubs']
    pkg {
        repo = 'heisenbug-contracts'
        name = project.name
    }
}

ext {
    snippetsDir = file('build/generated-snippets')
    htmlOutputDir = file('build/generated-docs')
}

asciidoctor {
    dependsOn test

    backends = ['html5']
    attributes = [
            'source-highlighter': 'highlightjs',
            'toc'               : 'left',
            'toclevels'         : 2,
            'numbered'          : '',
            'icons'             : 'font',
            'setanchors'        : '',
            'idprefix'          : '',
            'idseparator'       : '-',
            'docinfo1'          : '',
            'safe-mode-unsafe'  : '',
            'allow-uri-read'    : '',
            'snippets'          : snippetsDir,
            linkattrs           : true,
            encoding            : 'utf-8'
    ]

    inputs.dir snippetsDir
    outputDir htmlOutputDir
    sourceDir 'src/docs/asciidoc'
}

dependencies {
    implementation "com.google.code.gson:gson:${gsonVersion}"

    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
    testImplementation "org.springframework.cloud:spring-cloud-contract-spec:${springContractVersion}"
    testImplementation "org.springframework.cloud:spring-cloud-contract-wiremock:${springContractVersion}"
    testImplementation "org.springframework.cloud:spring-cloud-starter-contract-verifier:${springContractVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor"
}